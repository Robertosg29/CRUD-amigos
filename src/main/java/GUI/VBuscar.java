package GUI;

import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rober
 */
public class VBuscar extends javax.swing.JFrame {

    PPrincipal p;
    DefaultTableModel modeloTablaBusqueda = null;
    boolean resultadoEncontrado=false;

    public VBuscar(PPrincipal p) {
        this.p = p;
        initComponents();
        minitComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNombreAmigo = new javax.swing.JTextField();
        txtNombrePandilla = new javax.swing.JTextField();
        bCancelar = new javax.swing.JButton();
        bBuscar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre Amigo");

        jLabel3.setText("Nombre Pandilla");

        txtNombrePandilla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombrePandillaActionPerformed(evt);
            }
        });

        bCancelar.setText("Cancelar");
        bCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelarActionPerformed(evt);
            }
        });

        bBuscar.setText("Buscar");
        bBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBuscarActionPerformed(evt);
            }
        });

        jLabel2.setText("(Es obligatorio al menos rellenar un campo)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNombreAmigo, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(bCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(txtNombrePandilla, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombreAmigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombrePandilla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBuscarActionPerformed
        String nombreAmigo = "", nombrePandilla = "", ID_Amigo = "", nombreAmigo2 = "", direccion = "", telefono = "", aficiones = "";
        ResultSet rs = null;
        ResultSetMetaData rsMeta = null;
        int cont=0;
        try {
            nombreAmigo = txtNombreAmigo.getText();
            nombrePandilla = txtNombrePandilla.getText();
            if (nombreAmigo.compareTo("") != 0 || nombrePandilla.compareTo("") != 0) {
                resultadoEncontrado=false;
                try {
                    if (nombreAmigo.compareTo("") != 0 && nombrePandilla.compareTo("") == 0) {
                        // mostramos el amigo buscado
                        cont=0;
                        rs = p.getGb().buscarAmigo(nombreAmigo);
                        while (rs.next()) {
                            cont++;
                            p.limpiarTabla();
                            ID_Amigo = "" + rs.getInt(1);
                            nombreAmigo2 = rs.getString(2);
                            direccion = rs.getString(3);
                            telefono = "" + rs.getInt(4);
                            aficiones = rs.getString(5);
                            
                            String[] filaTabla = {ID_Amigo, nombreAmigo2, direccion, telefono, aficiones};
                            p.getModeloTablaAmigos().addRow(filaTabla);

                        }
                        if(cont==0){
                            JOptionPane.showMessageDialog(this, "No existe ningun amigo con este nombre.");
                        }else{
                            resultadoEncontrado=true;
                            p.getEtiquetaCabecera().setText("BÃºsqueda amigos por nombre : "+nombreAmigo);
                            p.getTablaPrincipal().setModel(p.getModeloTablaAmigos());
                        }
                    }else if(nombreAmigo.compareTo("") == 0 && nombrePandilla.compareTo("") != 0){
                        //mostramos todos los amigos pertenecientes a una pandilla
                        cont=0;
                        rs = p.getGb().buscarAmigosDeUnaPandilla(nombrePandilla);
                        
                        while (rs.next()) {
                            if(cont==0){
                                p.limpiarTabla();
                            }
                            cont++;
                            ID_Amigo = "" + rs.getInt(1);
                            nombreAmigo2 = rs.getString(2);
                            direccion = rs.getString(3);
                            telefono = "" + rs.getInt(4);
                            aficiones = rs.getString(5);
                            
                            String[] filaTabla = {ID_Amigo, nombreAmigo2, direccion, telefono, aficiones};
                            p.getModeloTablaAmigos().addRow(filaTabla);

                        }
                        if(cont==0){
                            JOptionPane.showMessageDialog(this, "La pandilla ("+nombrePandilla+") todavia no tiene amigos");
                        }else{
                            resultadoEncontrado=true;
                            p.getEtiquetaCabecera().setText("Amigos de la pandilla "+nombrePandilla);
                            p.getTablaPrincipal().setModel(p.getModeloTablaAmigos());
                            
                        }

                    }else if(nombreAmigo.compareTo("") != 0 && nombrePandilla.compareTo("") != 0){
                        //mostramos el amigo que coincida en nombre y pandilla
                        cont=0;
                        rs = p.getGb().buscarAmigoPorPandilla(nombreAmigo,nombrePandilla);
                        
                        while (rs.next()) {
                            if(cont==0){
                                p.limpiarTabla();
                            }
                            cont++;
                            ID_Amigo = "" + rs.getInt(1);
                            nombreAmigo2 = rs.getString(2);
                            direccion = rs.getString(3);
                            telefono = "" + rs.getInt(4);
                            aficiones = rs.getString(5);
                            
                            String[] filaTabla = {ID_Amigo, nombreAmigo2, direccion, telefono, aficiones};
                            p.getModeloTablaAmigos().addRow(filaTabla);

                        }
                        if(cont==0){
                            JOptionPane.showMessageDialog(this, "No existen coincidencias para el nombre "+nombreAmigo+" en la pandilla "+nombrePandilla);
                        }else{
                            resultadoEncontrado=true;
                            p.getEtiquetaCabecera().setText("Busqueda del amigo ("+nombreAmigo+") en la pandilla ("+nombrePandilla+")");
                            p.getTablaPrincipal().setModel(p.getModeloTablaAmigos());
                            
                        }
                        
                    }
                    if(resultadoEncontrado){
                     p.tablaAmigos=true;
                     p.cargarBotones();
                     this.dispose();
                    }
                   
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(this, "Debes introducir al menos un campo.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Debes introducir digitos en el campo telefono");
        } finally {
            p.getGb().cerrarConexion();
        }

    }//GEN-LAST:event_bBuscarActionPerformed

    private void bCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_bCancelarActionPerformed

    private void txtNombrePandillaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombrePandillaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombrePandillaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBuscar;
    private javax.swing.JButton bCancelar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtNombreAmigo;
    private javax.swing.JTextField txtNombrePandilla;
    // End of variables declaration//GEN-END:variables

    private void minitComponents() {

        this.setLocationRelativeTo(p.v);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setTitle("Buscar amigos");
        this.setResizable(false);
    }
}
